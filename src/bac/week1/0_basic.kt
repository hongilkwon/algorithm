    package bac.week1

    /*

    복잡도, 재귀함수, 누적합, 단순구현

    복잡도
    - 다른 로직이 필요한지에 대한 의문점을 제시
    - 0 =< bac.week5.concept.getN <= 10만 O(n2) 10억개의 연산.
    - 코딩에 사용하는 자료구조의 복잡도를 알고 있어야 한다.

    공간복잡도
    - 1000만따리 array는 생성할 수 없다

    재귀함수
    - 동일한 로직및 구조가 반복된다.
    - 종료조건(기저 사례가 있다)
    - 반복할때마다 그 크기가 줄어들어 반드시 종료조건에 도달해야된다.

    누적합
    - 누적해서 더해진 값 들의 배열을 의미한다
    - "구간합"에 대응하기 편하다
    - 정적인 자료구조에 사용한다
    - 가능하면 0이 아닌 idx 1부터 생성한다

    단순구현
    - 사용언어에 해당하는 기본적인 import 및 함수 암기.
    - 분기, 반복등 기본적인 논리적 사고로 해결가능.

    문제를 푸는 방법
    1. 문제를 이해한다 (입력과 출력)
    2. 문제를 분석한다.
    - 입력값의 최대 최소 파악
    - 단순 반복 및 재귀인가?
    - 특정 최적해(알고리즘이)존재하는가
    - 단순구현이라면 예외, 반례를 의식하자.
    - 최단거리, 유니온파인드 문제인가?
    3. 코드를 작성한다.
*/