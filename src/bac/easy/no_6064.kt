package bac.easy

/*
    카잉 달력(기본수학-gcd, lcm)

    M, N, x와 y가 주어질 때, <M:N>이 카잉 달력의 마지막 해라고 하면 <x:y>는 몇 번째 해
    (1 ≤ M, N ≤ 40_000, 1 ≤ x ≤ M, 1 ≤ y ≤ N)

    40_000 * 40_000
    1600_000_000 -> 16억(시간초과).

    즉, 1개씩 세어서는 안되고 뭉터기로 세어야됨.

    m = 10
    n = 12

    예) 1,2
0*10    <1,1> <2,2> <3,3> <4,4> <5,5> <6,6> <7,7> <8,8> <9,9> <10,10>
1*10    <1,11><2,12> <3,1> <4,2>  . . . . . . . . . . . . . . .<10,8>
2*20    <1,9> <2,10><3,11><4,12><5,1>......................... <10,6>
3*30    <1,7> <2,8> <3,9> <4,10><5,11><6,12><7,1>.............. <10,4>
4*40    <1,5> <2,6> <3,7> <4,8> <5,9> <6,10> <7,11><8,12> <9,1> <10,2>
5*50    <1,3> <2,4> <3,5> <4,6> <5,7> <6,8> <7,9> <8,10><9,11>  <10,12>

    예) 3
0*13    <1,1> <2,2> <3,3> <4,4> "<5,5>" <6,6> <7,7> <8,8> <9,9> <10,10> <11,11> <12,1> <13,2>
1*13    <1+13,3><2+13,4><3+13,5><4+13,6>"<5+13,7>"<6+13,8><7+13,9><8+13,10><9+13,11><10+13,1><11+13,2><12+13,3><13+13,4>
2*13    <1+13*2,5><2+13*2,6><3+13*2,7><4+13*2,8>"<5+13*2,9>"........
3*13
4*13
.
.
?       마지막은 어디서 끝날것인가?
        gcd lcm

     예) m 10 n 5   <5,5> ?

0*10    <1,1> <2,2> <3,3> <4,4> <5,5> <6,1> <7,2> <8,3> <9,4> <10,5>

   */

//var m = 0
//var n = 0
//var x = 0
//var y = 0
//
//fun gcd(num1: Int, num2: Int): Int {
//    var (a, b) =
//        if (num1 > num2) {
//            num1 to num2
//        } else {
//            num2 to num1
//        }
//
//    while (b != 0) {
//        val r = a % b
//        a = b
//        b = r
//    }
//    return a
//}
//
//fun lcm(a: Int, b: Int): Int = a * b / gcd(a, b)
//
//fun main() = with(System.`in`.bufferedReader()) {
//
//    val tc = readLine().toInt()
//    val sb = StringBuilder()
//
//    repeat(tc) {
//        val info = readLine().split(" ").map { it.toInt() }
//
//        m = info[0]
//        n = info[1]
//        x = info[2]
//        y = info[3]
//
//        val limit = lcm(m, n)
//
//        var answer = -1
//        for (i in x..limit step m) {
//
//            var temp = (i % n)
//            // 만약 나누어 떨어지면,
//            if (temp == 0)
//                temp = n
//
//            if (temp == y) {
//                answer = i
//                break
//            }
//        }
//        sb.append("$answer\n")
//    }
//
//    println(sb.toString())
//    return@with Unit
//}